name: Build and Push to GitHub Container Registry

on:
  push:
    branches:
      - main  # Change to your default branch if different
      - '*'
  pull_request:
    branches:
      - main
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} #temp comment
  #IMAGE_NAME: ROS2-Test

jobs:
  build-and-push-image:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-architecture builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Registry
        id: registry
        run: echo "username=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Debugging actions
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"
          echo "username job: ${{ steps.registry.outputs.username }}"
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          LABELS: ${{ steps.meta.outputs.labels }}
          FULL_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push Docker Image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./Container/ROS2-Test/
          file: ./Container/ROS2-Test/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.registry.outputs.username }}/ros2-test:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=ros
            ROS_DISTRO=iron
