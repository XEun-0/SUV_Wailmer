services: 
  ROS2-Base:
    build:
      context: ./Container/ROS2-Base
      dockerfile: Dockerfile
      args:
        USERNAME: ${USER:-dev}
        USER_UID: ${CU_UID}
        USER_GID: ${CU_GID}
    image: ros2-base
    env_file: ".env"
    tty: true
    container_name: ROS2-Base
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
      - /dev/video0
    volumes:
      - ./:/workspaces/ROS2-SW
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    ports:
      - "5000:5000"

  #  /dev/ttyUSB0:/dev/ttyUSB0
  # jetson_ap:
  #   build:
  #     context: ./Container/SSH_Server
  #   container_name: jetson_ap
  #   network_mode: "host"
  #   privileged: true
  #   volumes:
  #     - ./Container/SSH_Server/conf/hostapd.conf:/etc/hostapd/hostapd.conf:rw
  #     - ./Container/SSH_Server/conf/dnsmasq.conf:/etc/dnsmasq.conf:rw
  #     - ./Container/SSH_Server/backup_restore.sh:/opt/backup_restore.sh:rw
  #     - ./Container/SSH_Server/entrypoint.sh:/entrypoint.sh:rw
  #   command: ["/entrypoint.sh"]

  # networks:
  #   SUV_Network:
  #     driver: bridge
